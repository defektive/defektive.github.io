<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>random on defektive</title><link>https://defektive.github.io/tags/random/</link><description>Recent content in random on defektive</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 23 Apr 2019 16:20:01 +0000</lastBuildDate><atom:link href="https://defektive.github.io/tags/random/index.xml" rel="self" type="application/rss+xml"/><item><title>PfSense and SELKS</title><link>https://defektive.github.io/blog/2019/04/23/pfsense-and-selks/</link><pubDate>Tue, 23 Apr 2019 16:20:01 +0000</pubDate><guid>https://defektive.github.io/blog/2019/04/23/pfsense-and-selks/</guid><description>I installed SELKS this in a VM. I am using Fedora Server (which I kind of regret because of the updates).
Once installed I went to my PfSense firewall admin interface, to bridge LAN and WAN to a 3rd interface ( OPT1). ref
WAN + | | +--------------v----------------+ | | | | | PfSense | | | | | | | +---+--------------------+------+ | | | | | | v v LAN OPT1 (to SELKS Monitor port) PfSense logs in SELKS kibana I used some files from here, then enabled log forwarding in pfsense</description></item><item><title>Anyproxy Intercept</title><link>https://defektive.github.io/blog/2019/03/11/anyproxy-intercept/</link><pubDate>Mon, 11 Mar 2019 16:20:01 +0000</pubDate><guid>https://defektive.github.io/blog/2019/03/11/anyproxy-intercept/</guid><description>Anyproxy is an intercept proxy. I used it to inject scripts into pages to assist in web fuzzing.
const AnyProxy = require(&amp;#39;./anyproxy/proxy&amp;#39;); const options = { port: 8080, rule: require(&amp;#39;./dfkt_rule&amp;#39;), webInterface: { enable: true, webPort: 8002 }, throttle: 10000, forceProxyHttps: true, wsIntercept: true, silent: false }; const proxyServer = new AnyProxy.ProxyServer(options); proxyServer.on(&amp;#39;ready&amp;#39;, () =&amp;gt; { console.log(&amp;#39;ready&amp;#39;) }); proxyServer.on(&amp;#39;error&amp;#39;, (e) =&amp;gt; { console.error(e) }); proxyServer.start(); //when finished // dfkt_rule let hooks = { beforeSendRequest: [ function (requestDetail, requestDetailModifications) { requestDetailModifications.</description></item><item><title>Random shell scripting things I may use in the future</title><link>https://defektive.github.io/blog/2019/03/01/random-shell-scripting-things-i-may-use-in-the-future/</link><pubDate>Fri, 01 Mar 2019 16:20:01 +0000</pubDate><guid>https://defektive.github.io/blog/2019/03/01/random-shell-scripting-things-i-may-use-in-the-future/</guid><description>Mass move:
for f in wlog/*; do for ff in $f/*; do cp &amp;#34;$ff&amp;#34; $(basename $f)-$(basename $ff | sed &amp;#39;s/^00-//g&amp;#39; | sed &amp;#39;s/ /-/g&amp;#39;); done; done Mass Find and replace:
for f in *todo*; do cat $f | sed -e &amp;#39;s/## &amp;#39;$(basename $f | sed &amp;#39;s/-stand-up-notes.md//&amp;#39;)$&amp;#39;/---\\\ndate: &amp;#34;2019-03-01T16:20:01&amp;#34; title: &amp;#39;$(basename $f | sed &amp;#39;s/-stand-up-notes.md//&amp;#39;)$&amp;#39; stand up notes\\\n---&amp;#39;/ | tee $f ; done Mass adjust markdown headers:
find . -name &amp;#39;*.md&amp;#39; | while read f; do cat $f | egrep &amp;#39;^##\s&amp;#39; &amp;gt; /dev/null &amp;amp;&amp;amp; echo $f; done | while read fn; do cat $fn | sed &amp;#39;s/^##/###/g&amp;#39; | sed &amp;#39;s/^#\s/## /g&amp;#39; | tee $fn; done Create temp directory:</description></item></channel></rss>